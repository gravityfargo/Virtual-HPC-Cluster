---
- name: Prepare the base OS
  hosts: "{{ target_hostname }}"
  vars:
    admin_user: "{{ admin_user }}"
  tasks:
    ############################################################
    - name: Setup Packages
      become: true
      block:

        - name: Update apt cache
          ansible.builtin.apt:
            update_cache: yes
            cache_valid_time: 3600 # Cache valid for 1 hour to avoid repeated updates

        - name: Upgrade all packages to the latest version
          ansible.builtin.apt:
            upgrade: dist

        - name: Remove unwanted packages
          ansible.builtin.apt:
            name: "{{ item }}"
            state: absent
          loop:
            - plymouth
            - modemmanager
            - snapd

        - name: Prevent snapd from being installed
          ansible.builtin.shell: apt-mark hold snapd

        - name: Install common packages
          ansible.builtin.apt:
            name: "{{ item }}"
            state: present
            update_cache: yes
          loop:
            - net-tools
            - zsh
            - nfs-common
            - nmap
            - git
            - ufw
            - auditd
            - whois
            - prometheus-node-exporter
            - lua5.3 # start of lmod dependencies
            - lua-bit32:amd64
            - lua-posix:amd64
            - lua-posix-dev
            - liblua5.3-0:amd64
            - liblua5.3-dev:amd64
            - tcl
            - tcl-dev
            - tcl8.6
            - tcl8.6-dev:amd64
            - libtcl8.6:amd64
            - gfortran # start of spack dependencies 
            - gnupg2
            - python3-pip 
            - libpmix2

    ############################################################
    - name: Services
      become: true
      block:

        - name: Set timezone to America/New_York
          ansible.builtin.shell: timedatectl set-timezone America/New_York

        - name: Enable NTP
          ansible.builtin.shell: timedatectl set-ntp true

        - name: Enable essential services
          ansible.builtin.systemd:
            name: "{{ item }}"
            enabled: yes
            state: started
          loop:
            - systemd-timesyncd
            - prometheus-node-exporter
            - auditd

        - name: Disable unnecessary services
          ansible.builtin.systemd:
            name: "{{ item }}"
            enabled: no
            state: stopped
          loop:
            - motd-news

    ############################################################
    - name: Firewall
      become: true
      block:

        - name: Allow prometheus-node-exporter on 9100/tcp
          ansible.builtin.ufw:
            rule: allow
            port: '9100'
            proto: tcp
            comment: "prometheus-node-exporter"

        - name: Allow SSH on 22/tcp
          ansible.builtin.ufw:
            rule: allow
            port: '22'
            proto: tcp
            comment: "SSH"
        
        - name: Allow NFS on 2049/tcp
          ansible.builtin.ufw:
            rule: allow
            port: '2049'
            proto: tcp
            comment: "NFS"
  
        - name: Enable UFW
          ansible.builtin.ufw:
            state: enabled


    ############################################################
    - name: Networking
      become: true
      block:

        - name: Copy /etc/hosts from local to remote
          ansible.builtin.copy:
            src: /etc/hosts
            dest: /etc/hosts
            owner: root
            group: root
            mode: '0644'
          become: true

    ############################################################
    - name: SSH Settings
      become: true
      block:

        - name: Disable mail in PAM
          ansible.builtin.lineinfile:
            path: /etc/pam.d/sshd
            regexp: '^(session[ \t]+optional[ \t]+pam_mail.so.*)$'
            line: '#\1'
            backrefs: yes

        - name: Disable PrintLastLog in sshd_config
          ansible.builtin.lineinfile:
            path: /etc/ssh/sshd_config
            regexp: "^#?PrintLastLog yes"
            line: "PrintLastLog no"

        - name: Disable Challenge-Response Authentication
          ansible.builtin.lineinfile:
            path: /etc/ssh/sshd_config
            regexp: '^#?ChallengeResponseAuthentication yes'
            line: 'ChallengeResponseAuthentication no'
          become: true

        - name: Disable Password Authentication
          ansible.builtin.lineinfile:
            path: /etc/ssh/sshd_config
            regexp: '^#?PasswordAuthentication yes'
            line: 'PasswordAuthentication no'
          become: true

        - name: Disable Root Login
          ansible.builtin.lineinfile:
            path: /etc/ssh/sshd_config
            regexp: '^#?PermitRootLogin prohibit-password'
            line: 'PermitRootLogin no'
          become: true

    ############################################################
    - name: MOTD
      become: true
      block:

        - name: Remove all files in /etc/update-motd.d
          ansible.builtin.shell: rm -rf /etc/update-motd.d/*

        - name: Download MOTD file
          ansible.builtin.get_url:
            url: https://raw.githubusercontent.com/gravityfargo/Virtual-HPC-Cluster/main/assets/motd
            dest: /etc/motd

    ############################################################
    - name: User Customizations
      become: false
      block:

        - name: Change the admin's default shell to Zsh
          become: true
          ansible.builtin.shell: chsh -s $(which zsh) {{ admin_user }}

        - name: Download Oh My Zsh install script
          ansible.builtin.get_url:
            url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
            dest: "/tmp/install_oh_my_zsh.sh"
            mode: "0755"

        - name: Install Oh My Zsh
          ansible.builtin.shell: sh /tmp/install_oh_my_zsh.sh --unattended
          args:
            creates: ~/.oh-my-zsh

        - name: Install Zsh plugins
          ansible.builtin.git:
            repo: "{{ item.repo }}"
            dest: "{{ item.dest }}"
          loop:
            - {
                repo: "https://github.com/zsh-users/zsh-autosuggestions",
                dest: "~/.oh-my-zsh/custom/plugins/zsh-autosuggestions",
              }
            - {
                repo: "https://github.com/zsh-users/zsh-syntax-highlighting.git",
                dest: "~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting",
              }

        - name: Update Zsh configuration
          ansible.builtin.shell: "{{ item }}"
          loop:
            - sed -i 's/plugins=(git)/plugins=(zsh-autosuggestions zsh-syntax-highlighting)/' ~/.zshrc
            - sed -i 's/ZSH_THEME="robbyrussell"/ZSH_THEME="daveverwer"/' ~/.zshrc
            - echo "emulate sh -c 'source /etc/profile'" | cat - ~/.zshrc > temp && mv temp ~/.zshrc
          args:
            warn: false

    ############################################################
    - name: Mount Points and environment management 
      become: true
      block:

        - name: Create necessary directories
          ansible.builtin.file:
            path: "{{ item }}"
            state: directory
            mode: '0755' # or any other mode you deem appropriate
          loop:
            - /storage/home
            - /storage/projects
            - /storage/sw
            - /storage/spack

        - name: Create slurm user
          ansible.builtin.user:
            name: slurm
            comment: "Create Slurm User"
            uid: 1001
            group: slurm
            createhome: yes
            home: /var/lib/slurm
            shell: /bin/bash

        - name: Create software manager user
          ansible.builtin.user:
            name: swmanager
            comment: "Software Manager User"
            uid: 1002
            group: swmanager
            createhome: yes
            home: /home/swmanager
            shell: /bin/bash

        - name: Create file manager user
          ansible.builtin.user:
            name: filemanager
            comment: "File Manager User"
            uid: 1003
            group: filemanager
            createhome: no
            system: yes

        - name: Change ownership of /storage/sw to swmanager
          ansible.builtin.file:
            path: /storage/sw
            owner: swmanager
            group: swmanager
            state: directory

        - name: Change ownership of /storage/spack to swmanager
          ansible.builtin.file:
            path: /storage/spack
            owner: swmanager
            group: swmanager
            state: directory

        - name: Change ownership of /storage/projects to filemanager
          ansible.builtin.file:
            path: /storage/projects
            owner: filemanager
            group: filemanager
            state: directory

        - name: Change ownership of /storage/home to filemanager
          ansible.builtin.file:
            path: /storage/home
            owner: filemanager
            group: filemanager
            state: directory
