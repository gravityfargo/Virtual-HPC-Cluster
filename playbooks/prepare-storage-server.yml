---
- name: Prepare the Storage Server
  hosts: "{{ storage_server_hostname }}"
  become: true
  vars:
    subnet: "{{ subnet }}"
    lmod_version: "{{ lmod_version }}"
    admin_user: "{{ admin_user }}"
  tasks:
    ############################################################
    - name: Install dependencies
      ansible.builtin.apt:
        name:
          - libreadline-dev
          - nfs-kernel-server
          - bc
          - gcc
          - g++
          - gfortran
          - clang
          - gcc-10
          - g++-10
          - gfortran-10
          - gcc-12
          - g++-12
          - gfortran-12
          - lua5.3
          - lua-bit32:amd64
          - lua-posix:amd64
          - lua-posix-dev
          - liblua5.3-0:amd64
          - liblua5.3-dev:amd64
          - tcl
          - tcl-dev
          - tcl8.6
          - tcl8.6-dev:amd64
          - libtcl8.6:amd64
          - python3-pip
          - libpmix2
        state: present
        update_cache: yes

    ############################################################
    - name: Mount Points and environment management 
      become: true
      block:

        - name: Create necessary directories
          ansible.builtin.file:
            path: "{{ item }}"
            state: directory
            mode: '0755'
          loop:
            - /storage/home
            - /storage/projects
            - /storage/software

        - name: Ensure groups exist with specific GIDs
          ansible.builtin.group:
            name: "{{ item.name }}"
            gid: "{{ item.gid }}"
            state: present
          loop:
            - { name: "slurm", gid: "1001" }
            - { name: "spack", gid: "1002" }
            - { name: "filemanager", gid: "1003" }

        - name: Create users with home directories in /storage/home
          ansible.builtin.user:
            name: "{{ item.name }}"
            comment: "{{ item.comment }}"
            uid: "{{ item.uid }}"
            group: "{{ item.group }}"
            home: "{{ item.home }}"
            shell: /bin/bash
            createhome: yes
          loop:
            - { name: "slurm", comment: "Slurm User", uid: "1001", group: "slurm", home: "/storage/home/slurm" }
            - { name: "spack", comment: "Software Manager User", uid: "1002", group: "spack", home: "/storage/spack"}
            - { name: "filemanager", comment: "File Manager User", uid: "1003", group: "filemanager", home: "/storage/home/filemanager"}

        - name: Add admin account to spack group
          ansible.builtin.user:
            name: "{{ admin_user }}"
            groups: "{{ item }}"
            append: true
          loop:
            - spack
            - filemanager
            - slurm

        - name: Change ownership 
          ansible.builtin.file:
            path: "{{ item.path }}"
            owner: "{{ item.owner }}"
            group: "{{ item.group }}"
            state: directory
          loop:
            - { path: "/storage/home", owner: "filemanager", group: "filemanager" }
            - { path: "/storage/projects", owner: "filemanager", group: "filemanager" }
            - { path: "/storage/software", owner: "spack", group: "spack" }

    ############################################################
    - name: lmod
      become: true
      block:
        - name: Download and extract Lmod
          ansible.builtin.unarchive:
            src: "https://github.com/TACC/Lmod/archive/refs/tags/{{ lmod_version }}.tar.gz"
            dest: "/tmp"
            remote_src: true

        - name: Install Lmod
          ansible.builtin.shell: |
            cd /tmp/Lmod-{{ lmod_version }}
            ./configure --prefix=/storage/software
            make install
          args:
            creates: "/storage/software/lmod"

        - name: Create symbolic link for Lmod profile script
          ansible.builtin.file:
            src: "/storage/software/lmod/lmod/init/profile"
            dest: /etc/profile.d/z00_lmod.sh
            state: link

        - name: Set MODULEPATH environment variable
          ansible.builtin.lineinfile:
            path: /etc/environment
            line: 'MODULEPATH="/storage/software/modules/linux-ubuntu22.04-x86_64/Core"'
            create: true

        - name: Change ownership of /storage/software to spack
          ansible.builtin.file:
            path: /storage/software
            owner: spack
            group: spack
            state: directory
            recurse: true

    ############################################################

    - name: Install Spack
      become: true
      block:
        - name: Check if Spack exists
          ansible.builtin.stat:
            path: /storage/spack/bin/spack
          register: spack_executable

        - name: Download and extract Spack
          ansible.builtin.unarchive:
            src: "https://github.com/spack/spack/archive/refs/tags/releases/latest.tar.gz"
            dest: "/tmp"
            remote_src: true
          when: spack_executable.stat.exists == False

        - name: Move package to /storage/spack
          ansible.builtin.shell: mv /tmp/spack-releases-latest/* /storage/spack
          when: spack_executable.stat.exists == False

        - name: Change the home directory of a user
          ansible.builtin.user:
            name: spack
            home: /storage/spack
            move_home: yes
          when: spack_executable.stat.exists == False

        - name: Modify Configs
          ansible.builtin.shell: "{{ item }}"
          loop:
            - echo "source /storage/spack/share/spack/setup-env.sh" >> /storage/spack/.bashrc
            - echo "source /storage/spack/share/spack/setup-env.sh" >> /storage/{{ admin_user }}/.bashrc
            - echo "source /storage/spack/share/spack/setup-env.sh" >> /storage/{{ admin_user }}/.zshrc
            - echo '/storage/software/modules/linux-ubuntu22.04-x86_64/Core' > /storage/software/lmod/lmod/init/.modulespath
          when: spack_executable.stat.exists == False

        - name: Download config files
          ansible.builtin.get_url:
            url: https://raw.githubusercontent.com/gravityfargo/Virtual-HPC-Cluster/main/assets/spack/{{ item.file }}
            dest: "{{ item.dest }}"
          loop:
            - { file: "config.yaml", dest: "/storage/spack/etc/spack/config.yaml" }
            - { file: "compilers.yaml", dest: "/storage/spack/etc/spack/compilers.yaml" }
            - { file: "modules.yaml", dest: "/storage/spack/etc/spack/modules.yaml" }
          when: spack_executable.stat.exists == False

        - name: Change ownership of /storage/spack to spack
          ansible.builtin.file:
            path: /storage/spack
            owner: spack
            group: spack
            state: directory
            recurse: true
          when: spack_executable.stat.exists == False

        - name: Install a package with no dependencies to initialize Spack
          become: true
          become_user: spack
          shell: spack install gmake

    ############################################################
    - name: NFS
      become: true
      block:
        - name: Enable NFS Kernel Server
          ansible.builtin.systemd:
            name: nfs-kernel-server
            enabled: yes
            state: started

        - name: Add NFS export entries to /etc/exports
          ansible.builtin.lineinfile:
            path: /etc/exports
            line: "{{ item }}"
            create: yes
          loop:
            - "/storage  {{ subnet }}(rw,sync,no_subtree_check)"

        - name: Apply NFS exports
          ansible.builtin.shell: exportfs -a